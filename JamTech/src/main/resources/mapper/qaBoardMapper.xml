<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
    <mapper namespace="com.tech.biz.dao.QABoardDAO">
    
    
    <!-- crew게시판 Mapper -->
    
    <!-- 1. select 게시글 목록,등록일 기준 내림차순 번호기준 내림차순  -->
   	<select id="selectAll" resultType="QABoardDTO">
		SELECT qa_post_no, qa_title, qa_writer, qa_content,
				qa_reg_date, qa_up_date, qa_cnt, qa_recommend,
				qa_big_sep, qa_small_sep, qa_language, qa_ide, qa_progress,
				user_no, board_no
		FROM board_crew
		ORDER BY qa_reg_date DESC, qa_post_no DESC
	</select>
    
    <!-- 2. select 게시글읽어오기 -->
    <select id="select"  parameterType="int" resultType="QABoardDTO">
		SELECT qa_post_no, qa_title, qa_writer, qa_content,
				qa_reg_date, qa_up_date, qa_cnt, qa_recommend,
				qa_big_sep, qa_small_sep, qa_language, qa_ide, qa_progress,
				user_no, board_no
		FROM board_qa
		WHERE qa_post_no=#{qa_post_no}
  	</select>
  	
 	<!-- 3. insert 게시글쓰기 -->
	<insert id="insert" parameterType="QABoardDTO">
		INSERT INTO board_qa(qa_post_no, qa_title, qa_writer, qa_content, qa_big_sep, qa_small_sep, qa_language, qa_ide, qa_progress, user_no, board_no)
		VALUES(seq_qa_post_no.NEXTVAL, #{qa_title}, #{qa_writer}, #{qa_content}, #{qa_big_sep}, #{qa_small_sep}, #{qa_language}, #{qa_ide}, #{qa_progress}, #{user_no}, #{board_no})
	</insert>
 		
 	<!-- 4. update 게시글수정 -->
	<update id="update" parameterType="QABoardDTO">
 		UPDATE board_qa
 		SET qa_title=#{qa_title}, qa_content=#{qa_content}, qa_up_date = SYSDATE, qa_big_sep=#{qa_big_sep}, qa_small_sep=#{qa_small_sep}, qa_language=#{qa_language}, qa_ide=#{qa_ide}, qa_progress=#{qa_progress}
 		WHERE qa_post_no=#{qa_post_no} AND qa_writer = #{qa_writer}
	</update>
 		
 	<!-- 5. delete 게시글삭제 -->
 	<delete id="delete" parameterType="map">
  		DELETE
  		FROM board_qa
  		WHERE qa_post_no=#{qa_post_no} AND qa_writer=#{qa_writer}
  	</delete>
 	
 	<!-- 6. select 전체 게시글 개수 -->
 	<select id="count" resultType="int">
	  		SELECT count(*)
  			FROM board_qa
  	</select>
  	
 	<!-- 7. update 게시글조회수 증가 -->
 	<update id="increaseCnt" parameterType="int">
			UPDATE board_qa
			SET qa_cnt = qa_cnt + 1
			WHERE qa_post_no=#{qa_post_no}
	</update>
	
 	<!-- 8. update 게시글추천수 증가 -->
 	<update id="increaseRecommend" parameterType="int">
			UPDATE board_qa
			SET qa_recommend = qa_recommend + 1
			WHERE qa_post_no=#{qa_post_no}
	</update>
	
 	<!-- 9. select 게시글페이징 -->
 	<select id="selectPage" parameterType="map" resultType="QABoardDTO">
			SELECT * 
			FROM (SELECT ROWNUM rNum, A.*
					FROM (SELECT qa_post_no, qa_title, qa_writer, qa_content,
  								qa_reg_date, qa_up_date, qa_cnt, qa_recommend,
	  							qa_big_sep, qa_small_sep, qa_language, qa_ide, qa_progress,
	  							user_no, board_no
	  				
							FROM board_qa
							ORDER BY qa_reg_date DESC, qa_post_no DESC) A
					)
			WHERE rNum between (NVL(#{page} , 0)-1) * #{pageSize}+1 AND (NVL(#{page} , 0) * #{pageSize}) 
			ORDER BY qa_reg_date DESC, qa_post_no DESC
	</select>
 	
 	<!-- 10. select 게시글검색 -->
	<select id="searchSelectPage" parameterType="SearchCondition" resultType="QABoardDTO">
		SELECT * 
		FROM (SELECT ROWNUM rNum, A.*
				FROM (SELECT qa_post_no, qa_title, qa_writer, qa_content,
  							qa_reg_date, qa_up_date, qa_cnt, qa_recommend,
	  						qa_big_sep, qa_small_sep, qa_language, qa_ide, qa_progress,
	  						user_no, board_no
	  				
						FROM board_qa
						WHERE 1=1 <include refid="searchCondition"/>
						ORDER BY qa_reg_date DESC, qa_post_no DESC) A
				)
		WHERE rNum between (NVL(#{page} , 0)-1) * #{pageSize}+1 AND (NVL(#{page} , 0) * #{pageSize})  
		ORDER BY qa_reg_date DESC, qa_post_no DESC
	</select>
	
	<!-- 11.게시글검색 개수 확인 -->
	<select id="searchResultCnt" parameterType="SearchCondition" resultType="int">
		SELECT count(*)
		FROM board_qa
		WHERE 1=1 <include refid="searchCondition"/>
	</select>
	
	<!-- 12.검색 컨디션모드 sql -->
	<sql id = "searchCondition">
		<if test="keyword !=null and keyword != ''">
			<choose>
				<when test='option == "T"'>
					AND qa_title LIKE '%'||#{keyword}||'%'
				</when>
				<when test='option == "W"'>
					AND qa_writer LIKE '%'||#{keyword}||'%'
				</when>
				<otherwise>
					AND (qa_title LIKE '%'||#{keyword}||'%' or qa_content LIKE '%'||#{keyword}||'%')
				</otherwise>
			</choose>
		</if>
	</sql>
	
	<!-- index화면 -->
    <!-- newQA -->
    <select id="newQA" resultType="QABoardDTO">
    <![CDATA[
		SELECT qa_title, qa_post_no
		FROM board_qa
		WHERE ROWNUM<=5
		ORDER BY qa_reg_date DESC
	]]>

  	</select>
	
  </mapper>
 	